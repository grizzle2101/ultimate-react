---Styling Components:---
---1 - introduction:---
In this section we'll look at various methods for styling our components.

-vanilla css
-css modules
-css in JS
-using css libraries


---2 - Vanilla CSS:---
So vanilla css is not something we should do all too often, its time consuming & tedious.
But incase you ever need to, lets show you how its done.


Step 1 - remove bootstrap:
remove the import from main.tsx
import "bootstrap/dist/css/bootstrap.css";


step 2 - create css file.
create ListGroup.css in the same location as the ListGroup compoent.

Note:
Should styles be kept seperately? No. We want to achieve cohesion, so related things should be kept togther.


Step 3 - import:
import "./ListGroup.css"; add the style import into the ListGroup.tsc file.


Top Tip:
To avoid messy imports of multiple items associated with the ListGroup we can create an index file.
This is like a table of contents for everything ListGroup related.

created index file:
2 lines of code in the index file.

import ListGroup from "./ListGroup";
export default ListGroup;


Then look at the cleaner imports
import ListGroup from ".components/ListGroup/ListGroup";
to
import ListGroup from "./components/ListGroup";

By default, if we do not provide a file, the typescript compiler looks for index.ts, which tells us which file is
the default import.



Sidenote:
We also updated the git ignore to avoid the huge node_modules
note - git ignore node modules


TakeHome:
To use vanilla CSS, add a CSS file with the component.
Import the CSS in into the TSX file
Simple as.


---3 - CSS Modules:---
The problem with Vanilla CSS is when we have dupliactes of the same class name, we're going to have clashes!


Problem:
So if we add some styling into our global css, and have something different in the listgroup component.
.list-group {
  background: red;
}

We can see this causes a clash.

Solution:
CSS Modules allow us to scope these class locally!


Step 1 - rename listgroup to ListGroup.module.css


Step 2 - import like a javascript object
import styles from "./ListGroup.module.css";

note:
styles is the oject, list-group class will be a property.



Step 3 - Usage:
So after the import we can access the styles object.
One note is that we cannot use a hyphen, so we dot notation wont work, we have use square brackets.
    <ul className={styles["list-group"]}>

OR
using camel notation
  <ul className={styles.listGroup}>


Under the hood:
If we inspect the Cities, we can see we get list-group-xyzb
This is how vite bundles our CSS module & assigns a unique ID to the class so there will never be a clash.

So instead we use CAMEL NOTATION when using CSS bundles.

.listGroup {
  list-style: none;
  padding: 0;
}


How to add multiple classes?
So we have an array of objects, then join them with spaces to achieve the desired result.
      <ul className={[styles.listGroup, styles.container].join(" ")}>