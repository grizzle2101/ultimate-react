---Routing with React Router:---
In this section we'll go over routing, which is a way for allowing a user to go from one page to another using React Router.

You'll learn:
-setting up routes
-handling errors
-navigating between pages
-dynamic routes
-nested routes
-private routes



---Setting up Routing:---
So to setup routes in the application we'll need to download react router, configure & bootstrap it into the app.

Task 1 - install react router:
npm install react-router-dom@6.10.0


Task 2 - Configure router:
So just like in Angular, we have an array of route objects with path & components to be used at that route.
const router = createBrowserRouter([
    {path: '/', element: <HomePage />},
    {path: '/users', element: <UserListPage />}
]);


export default router;


Task 3 - Initialize Router Context in main.tsx
ReactDOM.createRoot(document.getElementById("root") as HTMLElement).render(
  <React.StrictMode>
    <QueryClientProvider client={queryClient}>
      <App />
      <ReactQueryDevtools />
    </QueryClientProvider>
  </React.StrictMode>
);


Result:
Now we have a homepage, and a users page.